package GUI;

import static GUI.CRUDAdministratorDates.jTableAdmin;
import java.io.IOException;
import java.text.MessageFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import Logic.*;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.print.PrinterException;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.JTable;

/**
 *
 * @author pc
 */
public class CRUDNotes extends javax.swing.JFrame {

    /**
     * Creates new form CRUD_NOTAS
     */
     FondoPanel fondo = new FondoPanel();

       
        
    public CRUDNotes() {
         this.setContentPane(fondo);
        initComponents();
         this.setExtendedState(CRUDNotes.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        tfSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lbName = new javax.swing.JLabel();
        tfID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfHeight = new javax.swing.JTextField();
        lbNotes = new javax.swing.JLabel();
        lbWeight = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        tfMuscleMass = new javax.swing.JTextField();
        tfGrease = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        lbAge = new javax.swing.JLabel();
        lbBodyMassIndex = new javax.swing.JLabel();
        tfWeight = new javax.swing.JTextField();
        tfAge = new javax.swing.JTextField();
        txtCorporal = new javax.swing.JTextField();
        lbWater = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        tfWater = new javax.swing.JTextField();
        tfDate = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        taNotes = new javax.swing.JTextArea();
        btnShowNotes = new javax.swing.JButton();
        lbMessages = new javax.swing.JLabel();
        lbNotFound = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel7.setFont(new java.awt.Font("Berlin Sans FB", 1, 18)); // NOI18N
        jLabel7.setText("DATA");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(994, 35, 49, 37);
        getContentPane().add(tfSearch);
        tfSearch.setBounds(900, 90, 222, 40);

        btnSearch.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        btnSearch.setText("SEARCH");
        btnSearch.setBorderPainted(false);
        btnSearch.setContentAreaFilled(false);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch);
        btnSearch.setBounds(1125, 84, 160, 48);

        jTable3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "NOTES", "WEIGHT", "MUSCLE MASS", "% GREASE", "HEIGHT", "AGE", "BODY MASS INDEX", "% BODY WATER", "DATE"
            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(459, 150, 803, 163);

        btnUpdate.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/modify.png"))); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.setBorderPainted(false);
        btnUpdate.setContentAreaFilled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate);
        btnUpdate.setBounds(1280, 150, 145, 48);

        btnDelete.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/delete2.png"))); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.setBorderPainted(false);
        btnDelete.setContentAreaFilled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete);
        btnDelete.setBounds(1280, 216, 145, 48);

        lbName.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbName.setText("NAME:");
        getContentPane().add(lbName);
        lbName.setBounds(470, 350, 80, 24);

        tfID.setEditable(false);
        getContentPane().add(tfID);
        tfID.setBounds(540, 410, 121, 40);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("ID:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(500, 420, 60, 24);

        tfHeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfHeightKeyTyped(evt);
            }
        });
        getContentPane().add(tfHeight);
        tfHeight.setBounds(1140, 380, 121, 40);

        lbNotes.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbNotes.setText("NOTES:");
        getContentPane().add(lbNotes);
        lbNotes.setBounds(459, 512, 80, 24);

        lbWeight.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbWeight.setText("WEIGHT:");
        getContentPane().add(lbWeight);
        lbWeight.setBounds(820, 350, 140, 24);

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("MUSCLE MASS:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(770, 420, 180, 24);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setText("% GREASE:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(810, 490, 160, 24);

        tfName.setEditable(false);
        getContentPane().add(tfName);
        tfName.setBounds(540, 340, 121, 40);

        tfMuscleMass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfMuscleMassKeyTyped(evt);
            }
        });
        getContentPane().add(tfMuscleMass);
        tfMuscleMass.setBounds(920, 410, 121, 40);

        tfGrease.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfGreaseKeyTyped(evt);
            }
        });
        getContentPane().add(tfGrease);
        tfGrease.setBounds(920, 480, 121, 40);

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setText("HEIGHT:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(1060, 390, 80, 24);

        lbAge.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbAge.setText("AGE:");
        getContentPane().add(lbAge);
        lbAge.setBounds(1080, 450, 60, 24);

        lbBodyMassIndex.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbBodyMassIndex.setText("BODY MASS INDEX:");
        getContentPane().add(lbBodyMassIndex);
        lbBodyMassIndex.setBounds(730, 560, 200, 24);

        tfWeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfWeightKeyTyped(evt);
            }
        });
        getContentPane().add(tfWeight);
        tfWeight.setBounds(920, 340, 121, 40);

        tfAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfAgeKeyTyped(evt);
            }
        });
        getContentPane().add(tfAge);
        tfAge.setBounds(1140, 440, 120, 40);

        txtCorporal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorporalKeyTyped(evt);
            }
        });
        getContentPane().add(txtCorporal);
        txtCorporal.setBounds(920, 550, 121, 40);

        lbWater.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbWater.setText("% WATER:");
        getContentPane().add(lbWater);
        lbWater.setBounds(820, 630, 150, 24);

        lblFecha.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblFecha.setText("DATE:");
        getContentPane().add(lblFecha);
        lblFecha.setBounds(1070, 510, 70, 24);

        tfWater.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfWaterKeyTyped(evt);
            }
        });
        getContentPane().add(tfWater);
        tfWater.setBounds(920, 620, 121, 40);

        tfDate.setEditable(false);
        getContentPane().add(tfDate);
        tfDate.setBounds(1140, 500, 120, 40);

        taNotes.setColumns(20);
        taNotes.setRows(5);
        jScrollPane1.setViewportView(taNotes);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(460, 540, 223, 83);

        btnShowNotes.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnShowNotes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/show.png"))); // NOI18N
        btnShowNotes.setText("SHOW NOTES");
        btnShowNotes.setBorderPainted(false);
        btnShowNotes.setContentAreaFilled(false);
        btnShowNotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowNotesActionPerformed(evt);
            }
        });
        getContentPane().add(btnShowNotes);
        btnShowNotes.setBounds(1280, 282, 189, 48);
        getContentPane().add(lbMessages);
        lbMessages.setBounds(2010, 294, 0, 0);
        getContentPane().add(lbNotFound);
        lbNotFound.setBounds(119, 77, 334, 0);

        jToggleButton1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pdf.png"))); // NOI18N
        jToggleButton1.setText("PDF");
        jToggleButton1.setBorderPainted(false);
        jToggleButton1.setContentAreaFilled(false);
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton1);
        jToggleButton1.setBounds(1290, 349, 131, 48);

        jToggleButton2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jToggleButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Excel_2013_23480.png"))); // NOI18N
        jToggleButton2.setText("Excel");
        jToggleButton2.setBorderPainted(false);
        jToggleButton2.setContentAreaFilled(false);
        jToggleButton2.setFocusPainted(false);
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton2);
        jToggleButton2.setBounds(1301, 414, 142, 48);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        int seleccion = jTable3.getSelectedRow();
        tfID.setText(jTable3.getValueAt(seleccion, 0).toString());
        tfName.setText(jTable3.getValueAt(seleccion, 1).toString());
        taNotes.setText(jTable3.getValueAt(seleccion, 2).toString());
        tfWeight.setText(jTable3.getValueAt(seleccion, 3).toString());
        tfMuscleMass.setText(jTable3.getValueAt(seleccion, 4).toString());
        tfGrease.setText(jTable3.getValueAt(seleccion, 5).toString());
        tfHeight.setText(jTable3.getValueAt(seleccion, 6).toString());
        tfAge.setText(jTable3.getValueAt(seleccion, 7).toString());
        txtCorporal.setText(jTable3.getValueAt(seleccion, 8).toString());
        tfWater.setText(jTable3.getValueAt(seleccion, 9).toString());
        tfDate.setText(jTable3.getValueAt(seleccion, 10).toString());
    }//GEN-LAST:event_jTable3MouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            Delete em = new Delete();
            int d = JOptionPane.showConfirmDialog(null, "ARE YOU SURE TO DELETE " + tfID.getText() + " ?");
            if (d == 0) {
                em.removeLinesColaGeneral(tfID.getText());
                mostrarNotas();
                lbMessages.setText("SUCCESFULLY DELETED!");
                tfID.setText("");
                tfName.setText("");
                tfWater.setText("");
                tfHeight.setText("");
                taNotes.setText("");
                tfSearch.setText("");
                txtCorporal.setText("");
                tfAge.setText("");
                tfDate.setText("");
                tfGrease.setText("");
                tfMuscleMass.setText("");
                tfWeight.setText("");
            }
        } catch (IOException ex) {
            lbMessages.setText("DELETE ERROR!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnShowNotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowNotesActionPerformed
        mostrarNotas();
        tfName.setText("");
        tfWater.setText("");
        tfHeight.setText("");
        taNotes.setText("");
        tfSearch.setText("");
        txtCorporal.setText("");
        tfAge.setText("");
        tfDate.setText("");
        tfGrease.setText("");
        tfMuscleMass.setText("");
        tfWeight.setText("");
        tfID.setText("");
    }//GEN-LAST:event_btnShowNotesActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        FileQueuesLog fl = new FileQueuesLog();
        if (fl.readingFiles(tfSearch.getText()) == true) {
            try {
                searchClienteIndividual(tfSearch.getText());
                tfSearch.setText("");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(CRUDNotes.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            lbNotFound.setText("NOT FOUND!");
        }
        tfName.setText("");
        tfWater.setText("");
        tfHeight.setText("");
        taNotes.setText("");
        tfSearch.setText("");
        txtCorporal.setText("");
        tfAge.setText("");
        tfDate.setText("");
        tfGrease.setText("");
        tfMuscleMass.setText("");
        tfWeight.setText("");
        tfID.setText("");

    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            Update em = new Update();
            int edit = JOptionPane.showConfirmDialog(null, "ARE YOU SURE TO UPDATE " + tfID.getText() + " ?");
            if (edit == 0) {
                em.actualizarNotaPersona(tfID.getText(), tfName.getText(), taNotes.getText(), Double.parseDouble(tfWeight.getText()), Double.parseDouble(tfMuscleMass.getText()),
                        Double.parseDouble(tfGrease.getText()), Double.parseDouble(tfHeight.getText()), Integer.parseInt(tfAge.getText()), Double.parseDouble(txtCorporal.getText()), Double.parseDouble(tfWater.getText()), tfDate.getText());
                lbMessages.setText("SUCCESFULLY UPDATED!");
                mostrarNotas();
                tfID.setText("");
                tfName.setText("");
                tfWater.setText("");
                tfHeight.setText("");
                taNotes.setText("");
                tfSearch.setText("");
                txtCorporal.setText("");
                tfAge.setText("");
                tfDate.setText("");
                tfGrease.setText("");
                tfMuscleMass.setText("");
                tfWeight.setText("");
            }
        } catch (IOException ex) {
            lbMessages.setText("UPDATE ERROR!");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed

      MessageFormat header = new MessageFormat("Citas personal");
        MessageFormat footer = new MessageFormat("Page{0,number,integer}");
        try {
            jTable3.print(JTable.PrintMode.NORMAL, header, footer);

        } catch (PrinterException ex) {
            System.err.format("error de impresion", ex.getMessage());
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed
void impresion() {
        JFileChooser seleccionar = new JFileChooser();
        File archivo;
        if (seleccionar.showDialog(null, "Exportar Excel") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccionar.getSelectedFile();
            String imagen = archivo + ".xls";
            File file = new File(imagen);
            ExportarExcel excel = new ExportarExcel(jTableAdmin, file, "" + "tablaimporte");
            excel.export(); 
        }
    }
    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        impresion();
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void tfWeightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfWeightKeyTyped
       char car = evt.getKeyChar();
        if((car<'0' || car>'9')) evt.consume();
    }//GEN-LAST:event_tfWeightKeyTyped

    private void tfMuscleMassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMuscleMassKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')) evt.consume();
    }//GEN-LAST:event_tfMuscleMassKeyTyped

    private void tfGreaseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfGreaseKeyTyped

        char car = evt.getKeyChar();
        if((car<'0' || car>'9')) evt.consume();
    }//GEN-LAST:event_tfGreaseKeyTyped

    private void txtCorporalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorporalKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')) evt.consume();
    }//GEN-LAST:event_txtCorporalKeyTyped

    private void tfWaterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfWaterKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')) evt.consume();
    }//GEN-LAST:event_tfWaterKeyTyped

    private void tfHeightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfHeightKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')) evt.consume();
    }//GEN-LAST:event_tfHeightKeyTyped

    private void tfAgeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfAgeKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')) evt.consume();
    }//GEN-LAST:event_tfAgeKeyTyped

    //Busca al cliente en los registros si lo encuentra lo va a mostra en la tabla
    public void searchClienteIndividual(String cedula) throws FileNotFoundException {
        Logic lC = new Logic();
        ArrayList<CustomerNotes> individual = new ArrayList();

        CustomerNotes tempCountries[] = lC.readRegistersFilesNotas();
        for (int i = 0; i < tempCountries.length; i++) {
            if (tempCountries[i].getCedula().equalsIgnoreCase(cedula)) {
                individual.add(tempCountries[i]);
            }
        }

        String matriz[][] = new String[individual.size()][11];

        for (int i = 0; i < individual.size(); i++) {

            int edad = individual.get(i).getEdad();
            double peso = individual.get(i).getPeso();
            double musculo = individual.get(i).getMusculo();
            double grasa = individual.get(i).getGrasa();
            double altura = individual.get(i).getAltura();
            double masaCorporal = individual.get(i).getMasaCorporal();
            double agua = individual.get(i).getAgua();

            matriz[i][0] = individual.get(i).getCedula();
            matriz[i][1] = individual.get(i).getNombre();
            matriz[i][2] = individual.get(i).getNotas();
            matriz[i][3] = String.valueOf(peso);
            matriz[i][4] = String.valueOf(musculo);
            matriz[i][5] = String.valueOf(grasa);
            matriz[i][6] = String.valueOf(altura);
            matriz[i][7] = String.valueOf(edad);
            matriz[i][8] = String.valueOf(masaCorporal);
            matriz[i][9] = String.valueOf(agua);
            matriz[i][10] = individual.get(i).getFecha();

            jTable3.setModel(new javax.swing.table.DefaultTableModel(
                    matriz,
                    new String[]{
                        "ID", "NAME", "NOTES", "WEIGHT", "MUSCLE MASS", "% GREASE", "HEIGHT", "AGE", "BODY MASS INDEX", "% WATER", "DATE"
                    }
            ));
        }
    }

    public void mostrarNotas() {
        Logic lC = new Logic();
        ArrayList<CustomerNotes> array = new ArrayList();

        CustomerNotes tempCountries[] = lC.readRegistersFilesNotas();
        for (int i = 0; i < tempCountries.length; i++) {
            array.add(tempCountries[i]);
        }//endfor

        String matriz[][] = new String[array.size()][11];

        for (int i = 0; i < array.size(); i++) {
            int edad = array.get(i).getEdad();
            double peso = array.get(i).getPeso();
            double musculo = array.get(i).getMusculo();
            double grasa = array.get(i).getGrasa();
            double altura = array.get(i).getAltura();
            double masaCorporal = array.get(i).getMasaCorporal();
            double agua = array.get(i).getAgua();

            matriz[i][0] = array.get(i).getCedula();
            matriz[i][1] = array.get(i).getNombre();
            matriz[i][2] = array.get(i).getNotas();
            matriz[i][3] = String.valueOf(peso);
            matriz[i][4] = String.valueOf(musculo);
            matriz[i][5] = String.valueOf(grasa);
            matriz[i][6] = String.valueOf(altura);
            matriz[i][7] = String.valueOf(edad);
            matriz[i][8] = String.valueOf(masaCorporal);
            matriz[i][9] = String.valueOf(agua);
            matriz[i][10] = array.get(i).getFecha();
            jTable3.setModel(new javax.swing.table.DefaultTableModel(
                    matriz,
                    new String[]{
                        "ID", "NAME", "NOTES", "WEIGHT", "MUSCLE MASS", "% GREASE", "HEIGHT", "AGE", "BODY MASS INDEX", "% WATER", "DATE"
                    }
            ));
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRUDNotes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRUDNotes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRUDNotes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRUDNotes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CRUDNotes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnShowNotes;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTable jTable3;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JLabel lbAge;
    private javax.swing.JLabel lbBodyMassIndex;
    private javax.swing.JLabel lbMessages;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbNotFound;
    private javax.swing.JLabel lbNotes;
    private javax.swing.JLabel lbWater;
    private javax.swing.JLabel lbWeight;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JTextArea taNotes;
    private javax.swing.JTextField tfAge;
    private javax.swing.JTextField tfDate;
    private javax.swing.JTextField tfGrease;
    private javax.swing.JTextField tfHeight;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfMuscleMass;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfSearch;
    private javax.swing.JTextField tfWater;
    private javax.swing.JTextField tfWeight;
    private javax.swing.JTextField txtCorporal;
    // End of variables declaration//GEN-END:variables

     class FondoPanel extends JPanel {

        private Image imagen;

        public void paint(Graphics g) {

            imagen = new ImageIcon(getClass().getResource("/Images/fondos9.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);

            super.paint(g);
        }
    }
}
